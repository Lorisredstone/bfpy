#Génération du brainfuck 
#Auteur : Lorisredstone 

# Anchor principale 
-
# Anchor des variables
>>>>>>>>-- +[-<+]-

+[-<+]-++[-->++]-->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---+[-<+]-
+[-<+]-++[-->++]--> # go au début et va sur la case des variables
[-]+++++++++++++++++++++++++++++ +[-<+]- # nombre de variables (29)
+[-<+]-+++[--->+++]---> # go au début et va sur la case des strings
[-]++++ +[-<+]- # nombre de strings (4)

# CODE :
# stocke 
+[-<+]-+++[--->+++]--->> # va au bon endroit
+> #push la len

 : +++++++++++[-<+]- #retourne au début 

# stocke GG Joueur 1 tu as gagnÃ© !
+[-<+]-+++[--->+++]--->>>>> # va au bon endroit
+++++++++++++++++++++++++++> #push la len
G : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
G : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
  : ++++++++++++++++++++++++++++++++>
J : ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
o : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
u : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
e : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
u : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
r : ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
  : ++++++++++++++++++++++++++++++++>
1 : +++++++++++++++++++++++++++++++++++++++++++++++++>  
  : ++++++++++++++++++++++++++++++++>
t : ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
u : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
  : ++++++++++++++++++++++++++++++++>
a : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
s : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
  : ++++++++++++++++++++++++++++++++>
g : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
a : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
g : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
n : ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
Ã : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
© : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
  : ++++++++++++++++++++++++++++++++>
! : +++++++++++++++++++++++++++++++++>

 : +++++++++++[-<+]- #retourne au début 

# stocke GG Joueur 2 tu as gagnÃ© !
+[-<+]-+++[--->+++]--->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> # va au bon endroit
+++++++++++++++++++++++++++> #push la len
G : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
G : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
  : ++++++++++++++++++++++++++++++++>
J : ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
o : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
u : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
e : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
u : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
r : ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
  : ++++++++++++++++++++++++++++++++>
2 : ++++++++++++++++++++++++++++++++++++++++++++++++++>
  : ++++++++++++++++++++++++++++++++>
t : ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
u : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
  : ++++++++++++++++++++++++++++++++>
a : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
s : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
  : ++++++++++++++++++++++++++++++++>
g : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
a : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
g : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
n : ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
Ã : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
© : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++>
  : ++++++++++++++++++++++++++++++++>
! : +++++++++++++++++++++++++++++++++>

 : +++++++++++[-<+]- #retourne au début 

# stocke |+[-<+]-+++[--->+++]--->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> # va au bon endroit
+> #push la len
| : +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[-<+]- #retourne au début 

+[-<+]-++[-->++]--> > [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case1_id = 49
+[-<+]-++[-->++]--> >> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case2_id = 50
+[-<+]-++[-->++]--> >>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case3_id = 51
+[-<+]-++[-->++]--> >>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case4_id = 52
+[-<+]-++[-->++]--> >>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case5_id = 53
+[-<+]-++[-->++]--> >>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case6_id = 54
+[-<+]-++[-->++]--> >>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case7_id = 55
+[-<+]-++[-->++]--> >>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case8_id = 56
+[-<+]-++[-->++]--> >>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case9_id = 57
+[-<+]-++[-->++]--> >>>>>>>>>> [-] +[-<+]- # set la variable case1_if = 0
+[-<+]-++[-->++]--> >>>>>>>>>>> [-] +[-<+]- # set la variable case2_if = 0
+[-<+]-++[-->++]--> >>>>>>>>>>>> [-] +[-<+]- # set la variable case3_if = 0
+[-<+]-++[-->++]--> >>>>>>>>>>>>> [-] +[-<+]- # set la variable case4_if = 0
+[-<+]-++[-->++]--> >>>>>>>>>>>>>> [-] +[-<+]- # set la variable case5_if = 0
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case6_if = 0
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case7_if = 0
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case8_if = 0
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case9_if = 0
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>> [-]+ +[-<+]- # set la variable play_next = 1
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case1 = 48
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case2 = 48
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case3 = 48
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case4 = 48
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case5 = 48
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case6 = 48
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case7 = 48
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case8 = 48
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case9 = 48
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable entree = 0
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
 :
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> . # print la variable case1
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> . # print la variable case2
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> . # print la variable case3
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> . # print la variable case4
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case5
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case6
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case7
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case8
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case9
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>,+[-<+]- # input dans la variable entree
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case1_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >++[-<+]- >>>>-]+[-<+]-++[-->++]--> >+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case1_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case2_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case2_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case3_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case3_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case4_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case4_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case5_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case5_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case6_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case6_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case7_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case7_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case8_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case8_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case9_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case9_if
    +[-<+]-++[-->++]--> >>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case1 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>> [-] +[-<+]- # set la variable case1_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case2 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>> [-] +[-<+]- # set la variable case2_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case3 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>> [-] +[-<+]- # set la variable case3_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case4 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>> [-] +[-<+]- # set la variable case4_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case5 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>> [-] +[-<+]- # set la variable case5_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case6 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case6_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case7 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case7_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case8 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case8_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case9 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case9_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
     # fin du if
+[-<+]->>>>>>] # finit en retournant sur la case du if
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
 :
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> . # print la variable case1
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> . # print la variable case2
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> . # print la variable case3
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> . # print la variable case4
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case5
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case6
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case7
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case8
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case9
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>,+[-<+]- # input dans la variable entree
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case1_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >++[-<+]- >>>>-]+[-<+]-++[-->++]--> >+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case1_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case2_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case2_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case3_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case3_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case4_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case4_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case5_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case5_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case6_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case6_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case7_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case7_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case8_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case8_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case9_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case9_if
    +[-<+]-++[-->++]--> >>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case1 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>> [-] +[-<+]- # set la variable case1_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case2 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>> [-] +[-<+]- # set la variable case2_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case3 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>> [-] +[-<+]- # set la variable case3_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case4 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>> [-] +[-<+]- # set la variable case4_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case5 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>> [-] +[-<+]- # set la variable case5_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case6 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case6_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case7 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case7_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case8 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case8_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case9 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case9_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
     # fin du if
+[-<+]->>>>>>] # finit en retournant sur la case du if
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
 :
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> . # print la variable case1
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> . # print la variable case2
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> . # print la variable case3
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> . # print la variable case4
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case5
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case6
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case7
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case8
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case9
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>,+[-<+]- # input dans la variable entree
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case1_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >++[-<+]- >>>>-]+[-<+]-++[-->++]--> >+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case1_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case2_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case2_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case3_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case3_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case4_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case4_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case5_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case5_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case6_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case6_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case7_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case7_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case8_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case8_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case9_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case9_if
    +[-<+]-++[-->++]--> >>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case1 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>> [-] +[-<+]- # set la variable case1_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case2 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>> [-] +[-<+]- # set la variable case2_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case3 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>> [-] +[-<+]- # set la variable case3_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case4 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>> [-] +[-<+]- # set la variable case4_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case5 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>> [-] +[-<+]- # set la variable case5_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case6 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case6_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case7 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case7_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case8 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case8_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case9 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case9_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
     # fin du if
+[-<+]->>>>>>] # finit en retournant sur la case du if
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
 :
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> . # print la variable case1
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> . # print la variable case2
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> . # print la variable case3
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> . # print la variable case4
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case5
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case6
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case7
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case8
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case9
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>,+[-<+]- # input dans la variable entree
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case1_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >++[-<+]- >>>>-]+[-<+]-++[-->++]--> >+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case1_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case2_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case2_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case3_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case3_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case4_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case4_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case5_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case5_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case6_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case6_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case7_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case7_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case8_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case8_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case9_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case9_if
    +[-<+]-++[-->++]--> >>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case1 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>> [-] +[-<+]- # set la variable case1_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case2 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>> [-] +[-<+]- # set la variable case2_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case3 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>> [-] +[-<+]- # set la variable case3_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case4 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>> [-] +[-<+]- # set la variable case4_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case5 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>> [-] +[-<+]- # set la variable case5_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case6 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case6_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case7 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case7_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case8 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case8_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case9 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case9_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
     # fin du if
+[-<+]->>>>>>] # finit en retournant sur la case du if
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
 :
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> . # print la variable case1
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> . # print la variable case2
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> . # print la variable case3
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> . # print la variable case4
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case5
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case6
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case7
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case8
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case9
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>,+[-<+]- # input dans la variable entree
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case1_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >++[-<+]- >>>>-]+[-<+]-++[-->++]--> >+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case1_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case2_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case2_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case3_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case3_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case4_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case4_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case5_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case5_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case6_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case6_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case7_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case7_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case8_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case8_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case9_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case9_if
    +[-<+]-++[-->++]--> >>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case1 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>> [-] +[-<+]- # set la variable case1_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case2 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>> [-] +[-<+]- # set la variable case2_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case3 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>> [-] +[-<+]- # set la variable case3_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case4 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>> [-] +[-<+]- # set la variable case4_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case5 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>> [-] +[-<+]- # set la variable case5_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case6 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case6_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case7 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case7_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case8 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case8_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case9 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case9_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
     # fin du if
+[-<+]->>>>>>] # finit en retournant sur la case du if
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
 :
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> . # print la variable case1
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> . # print la variable case2
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> . # print la variable case3
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> . # print la variable case4
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case5
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case6
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case7
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case8
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case9
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>,+[-<+]- # input dans la variable entree
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case1_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >++[-<+]- >>>>-]+[-<+]-++[-->++]--> >+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case1_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case2_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case2_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case3_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case3_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case4_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case4_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case5_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case5_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case6_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case6_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case7_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case7_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case8_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case8_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case9_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case9_if
    +[-<+]-++[-->++]--> >>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case1 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>> [-] +[-<+]- # set la variable case1_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case2 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>> [-] +[-<+]- # set la variable case2_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case3 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>> [-] +[-<+]- # set la variable case3_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case4 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>> [-] +[-<+]- # set la variable case4_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case5 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>> [-] +[-<+]- # set la variable case5_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case6 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case6_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case7 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case7_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case8 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case8_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case9 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case9_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
     # fin du if
+[-<+]->>>>>>] # finit en retournant sur la case du if
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
 :
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> . # print la variable case1
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> . # print la variable case2
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> . # print la variable case3
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> . # print la variable case4
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case5
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case6
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case7
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case8
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case9
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>,+[-<+]- # input dans la variable entree
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case1_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >++[-<+]- >>>>-]+[-<+]-++[-->++]--> >+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case1_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case2_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case2_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case3_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case3_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case4_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case4_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case5_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case5_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case6_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case6_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case7_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case7_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case8_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case8_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case9_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case9_if
    +[-<+]-++[-->++]--> >>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case1 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>> [-] +[-<+]- # set la variable case1_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case2 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>> [-] +[-<+]- # set la variable case2_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case3 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>> [-] +[-<+]- # set la variable case3_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case4 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>> [-] +[-<+]- # set la variable case4_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case5 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>> [-] +[-<+]- # set la variable case5_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case6 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case6_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case7 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case7_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case8 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case8_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case9 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case9_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
     # fin du if
+[-<+]->>>>>>] # finit en retournant sur la case du if
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
 :
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> . # print la variable case1
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> . # print la variable case2
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> . # print la variable case3
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> . # print la variable case4
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case5
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case6
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case7
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case8
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case9
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>,+[-<+]- # input dans la variable entree
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case1_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >++[-<+]- >>>>-]+[-<+]-++[-->++]--> >+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case1_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case2_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case2_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case3_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case3_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case4_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case4_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case5_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case5_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case6_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case6_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case7_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case7_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case8_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case8_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case9_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case9_if
    +[-<+]-++[-->++]--> >>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case1 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>> [-] +[-<+]- # set la variable case1_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case2 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>> [-] +[-<+]- # set la variable case2_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case3 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>> [-] +[-<+]- # set la variable case3_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case4 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>> [-] +[-<+]- # set la variable case4_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case5 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>> [-] +[-<+]- # set la variable case5_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case6 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case6_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case7 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case7_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case8 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case8_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> [-]++++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case9 = 50
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case9_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
     # fin du if
+[-<+]->>>>>>] # finit en retournant sur la case du if
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
 :
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> . # print la variable case1
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> . # print la variable case2
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> . # print la variable case3
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> . # print la variable case4
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case5
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case6
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case7
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case8
    +[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case9
    +[-<+]-+++[--->+++]---> >>. #affiche \n
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>,+[-<+]- # input dans la variable entree
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case1_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >++[-<+]- >>>>-]+[-<+]-++[-->++]--> >+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case1_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case2_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case2_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case3_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case3_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case4_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case4_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case5_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case5_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case6_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case6_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case7_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case7_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case8_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case8_if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-[+[-<+]->>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]+[-<+]->>++[-<+]->>>>+ #dupe and load entree in ram1 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ # push back the original value 
    +[-<+]-++[-->++]--> >>>>>>>>>-[+[-<+]->>>++[-<+]->>>>++[-<+]-++[-->++]--> >>>>>>>>>-]+[-<+]->>>++[-<+]->>>>+ #dupe and load case9_id in ram2 
    +[-<+]- >>>>- [ +[-<+]-++[-->++]--> >>>>>>>>>++[-<+]- >>>>-]+[-<+]-++[-->++]--> >>>>>>>>>+ # push back the original value 
    +[-<+]- >> >>[-]>[-] <<<[>>>+<<<-]+ >[>>-<+<-] >[<+>-] >[<<<->>>[-]] << [-] < [-<+>] #fait le =
    +[-<+]->  [-[+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->-]+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>++[-<+]->[-]] # store le résultat dans la variable case9_if
    +[-<+]-++[-->++]--> >>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case1 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>> [-] +[-<+]- # set la variable case1_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case2 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>> [-] +[-<+]- # set la variable case2_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case3 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>> [-] +[-<+]- # set la variable case3_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case4 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>> [-] +[-<+]- # set la variable case4_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case5 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>> [-] +[-<+]- # set la variable case5_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case6 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case6_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case7 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case7_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case8 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case8_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
    +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>[- +[-<+]->>>>>> + +[-<+]->>>>>><+ +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>] +[-<+]->>>>> [-+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>+ +[-<+]->>>>>] #load a var in the if+[-<+]->>>>>> [[-] # go au début et va sur la case du if et commence le if
     :
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> [-]+++++++++++++++++++++++++++++++++++++++++++++++++ +[-<+]- # set la variable case9 = 49
        +[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>> [-] +[-<+]- # set la variable case9_if = 0
         # fin du if
    +[-<+]->>>>>>] # finit en retournant sur la case du if
     # fin du if
+[-<+]->>>>>>] # finit en retournant sur la case du if
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>> . # print la variable case1
+[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>> . # print la variable case2
+[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>> . # print la variable case3
+[-<+]-+++[--->+++]---> >>. #affiche \n
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>> . # print la variable case4
+[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case5
+[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case6
+[-<+]-+++[--->+++]---> >>. #affiche \n
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case7
+[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case8
+[-<+]-+++[--->+++]---> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>. #affiche |
+[-<+]-++[-->++]--> >>>>>>>>>>>>>>>>>>>>>>>>>>>> . # print la variable case9
+[-<+]-+++[--->+++]---> >>. #affiche \n
